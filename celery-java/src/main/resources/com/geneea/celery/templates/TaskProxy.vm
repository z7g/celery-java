package ${packageName};

import com.geneea.celery.Celery;

public final class ${taskName}Proxy {

    private final Celery client;

    private ${taskName}Proxy(Celery client) {
        this.client = client;
    }

    public static ${packageName}.${taskName}Proxy with(Celery client) {
        return new ${packageName}.${taskName}Proxy(client);
    }

#foreach($method in $methods)
    @SuppressWarnings("unchecked")
    public Celery.AsyncResult<${method.returnType}> ${method.simpleName}(
    #foreach($param in $method.parameters)
            ${param.type} ${param.simpleName}#if( $foreach.hasNext ),#end

    #end
        ) throws java.io.IOException {

        return (Celery.AsyncResult<${method.returnType}>) client.submit(
                ${packageName}.${taskName}.class,
                "${method.simpleName}",
                new Object[]{
                    #foreach($param in $method.parameters)
                        ${param.simpleName}#if( $foreach.hasNext ),#end

                    #end
                });
    }
#end
}